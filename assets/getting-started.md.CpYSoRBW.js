import{_ as B,s as E,o as t,c as p,j as l,F as u,E as c,$ as g,ae as y,a as b,t as m,n as T,I as w,a5 as q}from"./chunks/framework.SYT71_kc.js";const $=["value"],I=["value"],L=["value"],V=["innerHTML"],F="party.iroiro.luajava",v="4.0.2",P={__name:"Matrix",setup(_){const o={},r=E("lua51"),j={lua51:"Lua 5.1",lua52:"Lua 5.2",lua53:"Lua 5.3",lua54:"Lua 5.4",luajit:"LuaJIT",luaj:"LuaJ"},d=E("Desktop"),f={Desktop:["natives-desktop"],iOS:["natives-ios"]};function A(i,s){return`<span class="token punctuation">&lt;</span><span class="token tag">${i}</span><span class="token punctuation">&gt;</span>${s}<span class="token punctuation">&lt;/</span><span class="token tag">${i}</span><span class="token punctuation">&gt;</span>`}const h=E("Gradle"),D={Maven(i,s,n,a,e){return A("dependency",Object.entries(e===null?{groupId:i,artifactId:s,version:n,classifier:a}:{groupId:i,artifactId:s,version:n,classifier:a,scope:e}).filter(k=>k[1]).map(k=>`
    ${A(k[0],k[1])}`).join("")+`
`)},Gradle(i,s,n,a,e){return`${e==="runtime"?"runtimeOnly":"implementation"} <span class="token string">'${i}:${s}:${n}${a?":"+a:""}'</span>`}},C={Maven:"language-xml",Gradle:"language-groovy"};function x(i,s,n){if(o[i]&&o[i][s])return"NOT AVAILABLE YET :(";{const a=f[s];return`${n(F,"luajava",v,null)}
${n(F,i,v,null)}
${i==="luaj"?"":a.map(e=>n(F,i+"-platform",v,e,"runtime")).join(`
`)}`}}return(i,s)=>(t(),p("div",null,[l("div",null,[(t(),p(u,null,c(D,(n,a)=>l("label",null,[g(l("input",{type:"radio",value:a,"onUpdate:modelValue":s[0]||(s[0]=e=>h.value=e),name:"manager"},null,8,$),[[y,h.value]]),b(m(a),1)])),64))]),l("div",null,[(t(),p(u,null,c(j,(n,a)=>l("label",null,[g(l("input",{type:"radio",value:a,"onUpdate:modelValue":s[1]||(s[1]=e=>r.value=e),name:"lua"},null,8,I),[[y,r.value]]),b(m(n),1)])),64))]),l("div",null,[(t(),p(u,null,c(f,(n,a)=>l("label",null,[g(l("input",{type:"radio",value:a,"onUpdate:modelValue":s[2]||(s[2]=e=>d.value=e),name:"platform"},null,8,L),[[y,d.value]]),b(m(a),1)])),64))]),l("div",{class:T(C[h.value])},[l("pre",null,[l("code",{innerHTML:x(r.value,d.value,D[h.value])},null,8,V)])],2)]))}},S=B(P,[["__scopeId","data-v-813395a1"]]),J=q('<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1><p>You may try things first <a href="./console.html">with an interactive console</a>.</p><h2 id="getting-it" tabindex="-1">Getting It <a class="header-anchor" href="#getting-it" aria-label="Permalink to &quot;Getting It&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Go to <a href="#initializer">Initializer</a> to get the required dependencies for your build system.</p></div><p>The library consists of two parts:</p><ol><li>The Java interface</li><li>The compiled native binaries</li></ol><p>So you will need both to get LuaJava to work correctly. Basically, using Maven Central:</p><ul><li>The <code>groupId</code> is <code>party.iroiro.luajava</code>.</li><li>The Java interface is <code>party.iroiro.luajava:luajava</code>.</li><li>The Lua specific bridging artifacts are <code>lua5N</code> (<code>lua51</code> <code>lua52</code> ...) or <code>luajit</code> or <code>luaj</code>.</li><li>The natives has <code>artifactId</code> like <code>lua5N-platform</code> (<code>lua51</code> <code>lua52</code> ...) or <code>luajit-platform</code>. (No need for LuaJ.)</li><li>LuaJ bindings need the <a href="https://jitpack.io/" target="_blank" rel="noreferrer">JitPack</a> repository.</li></ul><p>However, there are different native artifacts for different platforms, each with a different <code>classifier</code>:</p><ul><li>For desktop platforms, including Linux, Windows and macOS, on x64 or x32 or ARM(32/64), we provide an integrated artifact with classifier <code>natives-desktop</code>.</li><li>For mobile devices: <ul><li>iOS: An artifact with classifier <code>natives-ios</code>.</li><li>Android: Since there are different architectures for Android, you can choose from the following four according to your target devices. (I recommend you to just include all the four though.) <ul><li>Artifact with classifier <code>natives-armeabi-v7a</code>.</li><li>Artifact with classifier <code>natives-arm64-v8a</code>.</li><li>Artifact with classifier <code>natives-x86</code>.</li><li>Artifact with classifier <code>natives-x86_64</code>.</li></ul></li></ul></li></ul><h3 id="initializer" tabindex="-1">Initializer <a class="header-anchor" href="#initializer" aria-label="Permalink to &quot;Initializer&quot;">​</a></h3><p>You may get the required dependencies for your build system using the following simple form.</p><p>For mobile platforms, e.g. iOS and Android, you might need some more configuration to get things work.</p>',13),N=q(`<h3 id="ios" tabindex="-1">iOS <a class="header-anchor" href="#ios" aria-label="Permalink to &quot;iOS&quot;">​</a></h3><p>(Work in progress.)</p><h3 id="android" tabindex="-1">Android <a class="header-anchor" href="#android" aria-label="Permalink to &quot;Android&quot;">​</a></h3><p>You can choose between the following two configurations. The former one uses a pre-bundled AAR archive while the latter might give a little more flexibility.</p><p>For LuaJ bindings, you don&#39;t need a binary artifact. However, the LuaJ library uses some Java 8 API unsupported by older Android API levels, and you might need to configure <a href="https://developer.android.com/studio/write/java8-support#library-desugaring" target="_blank" rel="noreferrer">Android Java 8+ API Desugaring</a> in your application.</p><h4 id="using-bundled-aar-files" tabindex="-1">Using bundled AAR files <a class="header-anchor" href="#using-bundled-aar-files" aria-label="Permalink to &quot;Using bundled AAR files&quot;">​</a></h4><p>The AAR archive bundles native binaries for <code>armeabi-v7a</code> <code>arm64-v8a</code> <code>x86</code> and <code>x86_64</code>.</p><div class="language-groovy vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ext {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // You may replace \`luajit\` with \`lua51\` or other Lua versions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lua </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;luajit&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    luaJavaVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;4.0.2&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // other dependencies</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;party.iroiro.luajava:\${lua}:\${luaJavaVersion}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    runtimeOnly </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;party.iroiro.luajava:android:\${luaJavaVersion}:\${lua}@aar&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="using-a-really-lengthy-configuration" tabindex="-1">Using a really lengthy configuration <a class="header-anchor" href="#using-a-really-lengthy-configuration" aria-label="Permalink to &quot;Using a really lengthy configuration&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">android {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // other configurations</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sourceSets {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        main {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            jniLibs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">srcDirs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;libs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ext {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // You may replace \`lua51\` with \`luajit\` or other Lua versions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lua </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lua51&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    luajavaVersion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;4.0.2&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">configurations { natives }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // other dependencies</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;party.iroiro.luajava:luajava:\${luajavaVersion}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    implementation </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;party.iroiro.luajava:\${lua}:\${luajavaVersion}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    natives </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;party.iroiro.luajava:\${lua}-platform:\${luajavaVersion}:natives-armeabi-v7a&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    natives </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;party.iroiro.luajava:\${lua}-platform:\${luajavaVersion}:natives-arm64-v8a&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    natives </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;party.iroiro.luajava:\${lua}-platform:\${luajavaVersion}:natives-x86&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    natives </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;party.iroiro.luajava:\${lua}-platform:\${luajavaVersion}:natives-x86_64&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Generated by gdx-setup:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// called every time gradle gets executed, takes the native dependencies of</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// the natives configuration, and extracts them to the proper libs/ folders</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// so they get packed with the APK.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">task copyAndroidNatives {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    doFirst {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        file(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libs/armeabi-v7a/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mkdirs()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        file(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libs/arm64-v8a/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mkdirs()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        file(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libs/x86_64/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mkdirs()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        file(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libs/x86/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mkdirs()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        configurations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">natives</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">copy()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">files</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">each { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">jar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            def</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> outputDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (jar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endsWith(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;natives-arm64-v8a.jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) outputDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libs/arm64-v8a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (jar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endsWith(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;natives-armeabi-v7a.jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) outputDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libs/armeabi-v7a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endsWith(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;natives-x86_64.jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) outputDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libs/x86_64&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endsWith(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;natives-x86.jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) outputDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libs/x86&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(outputDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                copy {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    from zipTree(jar)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    into outputDir</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    include </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;*.so&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tasks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">whenTaskAdded { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">packageTask</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (packageTask</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">contains(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;merge&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> packageTask</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">contains(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;JniLibFolders&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        packageTask</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dependsOn </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;copyAndroidNatives&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><h2 id="using-it" tabindex="-1">Using It <a class="header-anchor" href="#using-it" aria-label="Permalink to &quot;Using It&quot;">​</a></h2><p>After setting up the dependencies or downloading the <a href="./console.html">an interactive console</a>, check out the <a href="./api.html">Lua-side <code>java</code> API</a> and the <a href="./java.html">Java-side API</a> to start coding!</p>`,12),M=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started.md","filePath":"getting-started.md","lastUpdated":1724853561000}'),O={name:"getting-started.md"},z=Object.assign(O,{setup(_){return(o,r)=>(t(),p("div",{"data-pagefind-body":!0},[J,w(S),N]))}});export{M as __pageData,z as default};
